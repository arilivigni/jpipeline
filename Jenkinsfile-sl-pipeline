@Library(['github.com/arilivigni/jpipeline@master', 'github.com/CentOS/cico-pipeline-library@master'])
import org.centos.jpipeline.*
import org.centos.*


properties(
        [
                buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '25', daysToKeepStr: '', numToKeepStr: '50')),
                disableConcurrentBuilds(),
                parameters(
                        [
                                string(defaultValue: 'f26', description: 'Fedora target branch', name: 'TARGET_BRANCH'),
                                string(defaultValue: 'org.centos.stage', description: 'Main topic to publish on', name: 'MAIN_TOPIC'),
                        ]
                ),
        ]
)


node {
    ansiColor('xterm') {
        timestamps {
            def current_stage = ''
            try {
                deleteDir()
                jCiPipeline {}
            } catch (err) {
                echo err.getMessage()
                throw err
            } finally {
                currentBuild.displayName = "Build#: ${env.BUILD_NUMBER} - Branch: ${env.branch}"
                currentBuild.description = "Build Result: ${currentBuild.currentResult}"
                env.topic = "${env.MAIN_TOPIC}.ci.pipeline.complete"
                echo "TOPIC: ${env.topic}"
                echo "MESSAGE PROPERTIES\n${env.MSG_PROPS}"
                echo "STAGE: ${env.CURRENT_STAGE}"
                step([$class: 'ArtifactArchiver', allowEmptyArchive: true,
                      artifacts: 'jpipeline/**, .*props.*',
                      fingerprint: true])
            }
        }
    }
}